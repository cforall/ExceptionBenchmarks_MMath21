// Throw Across Empty Function
#include <clock.hfa>
#include <exception.hfa>
#include <fstream.hfa>
#include <stdlib.hfa>									// strto

exception empty_exception;
vtable(empty_exception) empty_vt;

void unwind_empty(unsigned int frames) {
	if (frames) {
		unwind_empty(frames - 1);
		if ( frames == -1 ) printf( "42" );                             // prevent recursion optimizations
	} else {
		throw (empty_exception){&empty_vt};
	}
}

int main(int argc, char * argv[]) {
	unsigned int times = 1;
	unsigned int total_frames = 1;
	if (1 < argc) {
		times = strto(argv[1], 0p, 10);
	}
	if (2 < argc) {
		total_frames = strto(argv[2], 0p, 10);
	}

	Time start_time = timeHiRes();
	for (unsigned int count = 0 ; count < times ; ++count) {
		try {
			unwind_empty(total_frames);
		} catch (empty_exception *) {
			asm volatile ("# catch block");
		}
	}
	Time end_time = timeHiRes();
	sout | "Run-Time (s): " | wd(0,1, (end_time - start_time)`ns / 1_000_000_000.);
}
